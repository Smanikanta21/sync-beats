// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id String @id @default(cuid())
  name String
  username String? @unique
  email String @unique
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  devices Device[]
  

  Room Room[]

  RoomUsers RoomUsers[]
}

model Device {
  id        String   @id @default(cuid())
  DeviceUserId    String
  name      String
  status    String   @default("offline")
  ip        String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user Users @relation(fields: [DeviceUserId], references: [id])

  @@unique([DeviceUserId, name])
  RoomDevices RoomDevices[]
}



model Room{
  id String @id @default(cuid())
  code String @unique @default(uuid())
  name String
  hostId String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  host Users  @relation(fields: [hostId],references: [id])
  participants RoomUsers[]
  devices RoomDevices[]
}

model RoomUsers{
  id String @id @default(cuid())
  roomId String
  userId String
  joinedAt DateTime @default(now())

  room Room @relation(fields: [roomId], references: [id])
  user Users @relation(fields: [userId], references: [id])
  @@unique([roomId,userId])

}

model RoomDevices{
  id String @id @default(cuid())
  roomId String
  deviceId String
  joinedAt DateTime @default(now())

  room  Room @relation(fields: [roomId], references: [id])
  devices Device @relation(fields: [deviceId],references: [id]) 
}